<beast version='2.0'
       namespace='beast.app.beauti:beast.core:beast.evolution.branchratemodel:beast.evolution.speciation:beast.evolution.tree.coalescent:beast.core.util:beast.evolution.nuc:beast.evolution.operators:beast.evolution.sitemodel:beast.evolution.substitutionmodel:beast.evolution.likelihood:beast.evolution:beast.math.distributions'>

    <!-- Clock models -->
    <mergewith point='clockModelTemplates'>
       
        <!-- MultiClockModel -->
        <subtemplate id='MultiClock' class='beast.evolution.branchratemodel.MultiClockModel'
                     mainid='MultiClock.c:$(n)'
                     suppressInputs='
                            beast.evolution.branchratemodel.MultiClockModel.indicators,
                            beast.evolution.branchratemodel.MultiClockModel.tree
                            '>
            <![CDATA[
                <input spec='MultiStrictClockModel' id='MultiClock.c:$(n)' tree='@Tree.t:$(n)'>
                    <clock.rate id='clockRate.c:$(n)' spec='parameter.RealParameter' value='1.0' estimate='true'/>
                </input>

        <operator id='StrictClockRateScaler.c:$(n)' spec='ScaleOperator' scaleFactor="0.75" weight="3" parameter='@clockRate.c:$(n)'/>

	<upDownOperator id='strictClockUpDownOperator.c:$(n)' spec='UpDownOperator' scaleFactor="0.75" weight="3">
            <up idref="clockRate.c:$(n)"/>
            <down idref="Tree.t:$(n)"/>
	</upDownOperator>
                              
        <prior id='ClockPrior.c:$(n)' x='@clockRate.c:$(n)'><distr spec="beast.math.distributions.Uniform" upper='Infinity'/></prior>
        
	<logger idref="tracelog">
            <log idref="clockRate.c:$(n)"/>
	</logger>
]]>
            <connect srcID='clockRate.c:$(n)' targetID='state' inputName='stateNode'
                     if='inlikelihood(clockRate.c:$(n)) and clockRate.c:$(n)/estimate=true'/>
            <connect srcID='ClockPrior.c:$(n)' targetID='prior' inputName='distribution'
                     if='inlikelihood(clockRate.c:$(n)) and clockRate.c:$(n)/estimate=true'>substitution rate of
                partition c:$(n)
            </connect>
            <connect srcID='StrictClockRateScaler.c:$(n)' targetID='mcmc' inputName='operator'
                     if='inlikelihood(clockRate.c:$(n)) and clockRate.c:$(n)/estimate=true'>Scale substitution rate of
                partition c:$(n)
            </connect>
            <connect srcID='strictClockUpDownOperator.c:$(n)' targetID='mcmc' inputName='operator'
                     if='nooperator(FixMeanRatesOperator) and inlikelihood(clockRate.c:$(n)) and inlikelihood(Tree.t:$(n)) and Tree.t:$(n)/estimate=true and clockRate.c:$(n)/estimate=true'>
                Scale up substitution rate c:$(n) and scale down tree t:($n)
            </connect>
 
            <connect srcID='Tree.t:$(n)' targetID='MultiClock.c:$(n)' inputName='tree' if='inlikelihood(MultiClock.c:$(n))'/>
            
            <connect srcID='clockRate.c:$(n)' targetID='tracelog' inputName='log'
                     if='inlikelihood(clockRate2.c:$(n))'/>
            
            <connect srcID='MultiClock.c:$(n)' targetID='TreeWithMetaDataLogger.t:$(n)'
                     inputName='branchratemodel' if='inposterior(MultiClock.c:$(n))'/>
        </subtemplate>    
    </mergewith>
</beast>