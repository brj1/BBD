<beast version='2.0'
       namespace='beast.app.beauti:beast.core:beast.evolution.branchratemodel:beast.evolution.speciation:beast.evolution.tree.coalescent:beast.core.util:beast.evolution.nuc:beast.evolution.operators:beast.evolution.sitemodel:beast.evolution.substitutionmodel:beast.evolution.likelihood:beast.evolution:beast.math.distributions'>

<!-- tree priors -->
<mergewith point='treePriorTemplates'> 

        <subtemplate id='BirthDeathSkylineMultiRhoWithDates' class='beast.evolution.speciation.BirthDeathSkylineWithDatesModel' mainid='BirthDeathSkyMultiRhoWithDates.t:$(n)'
suppressInputs='beast.evolution.speciation.BirthDeathSkylineWithDatesModel.intervalTimes,
	beast.evolution.speciation.BirthDeathSkylineWithDatesModel.birthRate,
	beast.evolution.speciation.BirthDeathSkylineWithDatesModel.deathRate,
	beast.evolution.speciation.BirthDeathSkylineWithDatesModel.samplingRate,
	beast.evolution.speciation.BirthDeathSkylineWithDatesModel.contemp,
	beast.evolution.speciation.BirthDeathSkylineWithDatesModel.S0,
	beast.evolution.speciation.BirthDeathSkylineWithDatesModel.tree,
	beast.evolution.speciation.BirthDeathSkylineWithDatesModel.treeIntervals,
	beast.evolution.speciation.BirthDeathSkylineWithDatesModel.forceRateChange, 
	beast.evolution.speciation.BirthDeathSkylineWithDatesModel.conditionOnSurvival, 
	beast.math.distributions.MarkovChainDistribution.parameter,
	beast.evolution.speciation.BirthDeathSkylineWithDatesModel.birthRateTimesRelative,
	beast.evolution.speciation.BirthDeathSkylineWithDatesModel.deathRateTimesRelative,
	beast.evolution.speciation.BirthDeathSkylineWithDatesModel.samplingRateTimesRelative,
	beast.evolution.speciation.BirthDeathSkylineWithDatesModel.reverseTimeArrays,
	beast.evolution.speciation.BirthDeathSkylineWithDatesModel.originIsRootEdge,
	beast.evolution.speciation.BirthDeathSkylineWithDatesModel.deathRateChangeTimes,
	beast.evolution.speciation.BirthDeathSkylineWithDatesModel.samplingRateChangeTimes,
	beast.evolution.speciation.BirthDeathSkylineWithDatesModel.birthRateChangeTimes,
	beast.evolution.speciation.BirthDeathSkylineWithDatesModel.removalProbabilityChangeTimes,
	beast.evolution.speciation.BirthDeathSkylineWithDatesModel.removalProbability,
	beast.evolution.speciation.BirthDeathSkylineWithDatesModel.netDiversification,
	beast.evolution.speciation.BirthDeathSkylineWithDatesModel.turnOver,
	beast.evolution.speciation.BirthDeathSkylineWithDatesModel.conditionOnRhoSampling,
        beast.evolution.speciation.BirthDeathSkylineWithDatesModel.rhoSamplingTimes,
        beast.evolution.speciation.BirthDeathSkylineWithDatesModel.SATaxon,
        beast.evolution.speciation.BirthDeathSkylineWithDatesModel.Taxon,
        beast.evolution.speciation.BirthDeathSkylineWithDatesModel.origin,
        beast.evolution.speciation.BirthDeathSkylineWithDatesModel.conditionOnRoot'>
<![CDATA[
<!-- Sequential Birth Death Skyline model-->
	<BirthDeathSkylineWithDatesModel spec="beast.evolution.speciation.BirthDeathSkylineWithDatesModel" id="BirthDeathSkyMultiRhoWithDates.t:$(n)" tree="@Tree.t:$(n)" conditionOnRoot="True">
		<parameter name="reproductiveNumber" id="reproductiveNumber.t:$(n)" value="2" lower="0." dimension ="10" upper="Infinity"/>
		<parameter name="becomeUninfectiousRate" id="becomeUninfectiousRate.t:$(n)" value="1." lower="0." upper="Infinity" dimension ="1"/>
		<parameter name="samplingProportion" id="samplingProportion.t:$(n)" value="0.01"/> 
		<parameter name="rho" id="rho.t:$(n)" value="0.01" lower="0." upper="1."/> 
		<parameter name="rhoSamplingDates" id="rhoSamplingDates.t:$(n)" value="0.0"/> 
        <reverseTimeArrays spec='parameter.BooleanParameter' value='false false false true false'/>
	</BirthDeathSkylineWithDatesModel>

	<distribution id="rhoPriorMultiRhoWithDates.t:$(n)" spec="beast.math.distributions.Prior" x="@rho.t:$(n)">
		<distr spec="beast.math.distributions.Beta" offset="0.">
			<parameter name="alpha" value="1." estimate="false"/> 
			<parameter name="beta" value="1." estimate="false"/> 
		</distr>	
	</distribution>
	<distribution id="becomeUninfectiousRatePriorMultiRhoWithDates.t:$(n)" spec="beast.math.distributions.Prior" x="@becomeUninfectiousRate.t:$(n)">
		<distr spec='beast.math.distributions.LogNormalDistributionModel' offset="0.0" meanInRealSpace="false">
			<parameter name="M" value="0." estimate="false"/> 
			<parameter name="S" value="1." estimate="false"/> 
		</distr>	
	</distribution>
	<distribution id="reproductiveNumberPriorMultiRhoWithDates.t:$(n)" spec="beast.math.distributions.Prior" x="@reproductiveNumber.t:$(n)">
		<distr spec='beast.math.distributions.LogNormalDistributionModel' offset="0.0" meanInRealSpace="false">
			<parameter name="M" value="0." estimate="false"/> 
			<parameter name="S" value="1." estimate="false"/> 
		</distr>	
	</distribution>
        <distribution id="samplingProportionPriorMultiRhoWithDates.t:$(n)" spec="beast.math.distributions.Prior" x="@samplingProportion.t:$(n)">
		<distr spec="beast.math.distributions.Beta" offset="0.">
			<parameter name="alpha" value="1." estimate="false"/> 
			<parameter name="beta" value="1." estimate="false"/> 
		</distr>
        </distribution>

	<RPNcalculator spec="beast.math.statistic.RPNcalculator" id="birth.t:$(n)" expression="reproductiveNumber.t:$(n) becomeUninfectiousRate.t:$(n) *"> <!-- s/(d+s) -->
		<parameter idref="becomeUninfectiousRate.t:$(n)"/>
		<parameter idref="reproductiveNumber.t:$(n)"/>        
	</RPNcalculator>
	<RPNcalculator spec="beast.math.statistic.RPNcalculator" id="sampling.t:$(n)" expression="becomeUninfectiousRate.t:$(n) samplingProportion.t:$(n) *"> 
		<parameter idref="becomeUninfectiousRate.t:$(n)"/>
		<parameter idref="samplingProportion.t:$(n)"/>        
	</RPNcalculator>
	<RPNcalculator spec="beast.math.statistic.RPNcalculator" id="death.t:$(n)" expression="becomeUninfectiousRate.t:$(n) 1 samplingProportion.t:$(n) - *"> <!-- b*S0/(d+s) -->
		<parameter idref="becomeUninfectiousRate.t:$(n)"/>
		<parameter idref="samplingProportion.t:$(n)"/>        
	</RPNcalculator>

	<!-- tree operators -->	
	<operator id='BDSKY_contemptreeScaler.t:$(n)' spec='ScaleOperator' scaleFactor="0.5" weight="3" tree="@Tree.t:$(n)"/>
	<operator id='BDSKY_contemptreeRootScaler.t:$(n)' spec='ScaleOperator' scaleFactor="0.5" weight="3" tree="@Tree.t:$(n)" rootOnly='true'/>
	<operator id='BDSKY_contempUniformOperator.t:$(n)' spec='Uniform' weight="30" tree="@Tree.t:$(n)"/>
	<operator id='BDSKY_contempSubtreeSlide.t:$(n)' spec='SubtreeSlide' weight="15" gaussian="true" size="1.0" tree="@Tree.t:$(n)"/>
	<operator id='BDSKY_contempnarrow.t:$(n)' spec='Exchange' isNarrow='true' weight="15" tree="@Tree.t:$(n)"/>
	<operator id='BDSKY_contempwide.t:$(n)' spec='Exchange' isNarrow='false' weight="3" tree="@Tree.t:$(n)"/>
	<operator id='BDSKY_contempWilsonBalding.t:$(n)' spec='WilsonBalding' weight="3" tree="@Tree.t:$(n)"/>

	<!-- BDSKY operators -->
	<operator id='becomeUninfectiousRateScaler.t:$(n)' spec='ScaleOperator' scaleFactor=".75" weight="2" parameter="@becomeUninfectiousRate.t:$(n)"/>
        <operator id='samplingScaler.t:$(n)' spec='ScaleOperator' scaleFactor=".75" weight="2" parameter="@samplingProportion.t:$(n)"/>
	<operator id='rhoScaler.t:$(n)' spec='ScaleOperator' scaleFactor=".75" weight="1" parameter="@rho.t:$(n)"/>
	<operator id='reproductiveNumberScaler.t:$(n)' spec='ScaleOperator' scaleFactor=".75" weight="10" parameter="@reproductiveNumber.t:$(n)"/>

	<operator id="updownBD.t:$(n)" spec="UpDownOperator" scaleFactor=".75" weight="2">
		<up idref="reproductiveNumber.t:$(n)"/>
		<down idref="becomeUninfectiousRate.t:$(n)"/>
	</operator>
]]>
            <connect srcID='BirthDeathSkyMultiRhoWithDates.t:$(n)' targetID='prior' inputName='distribution' if='inposterior(BirthDeathSkyMultiRhoWithDates.t:$(n)) and inlikelihood(Tree.t:$(n)) and Tree.t:$(n)/estimate=true'/>
            <connect srcID='RandomTree.t:$(n)'                targetID='BirthDeathSkySerial.t:$(n)' inputName='init'   if='inposterior(Tree.t:$(n))'/>

            <connect srcID='samplingProportionPriorMultiRhoWithDates.t:$(n)' targetID='prior' inputName='distribution' if='inposterior(BirthDeathSkyMultiRhoWithDates.t:$(n)) and samplingProportion.t:$(n)/estimate=true'>prior on sampling proportion t:$(n)</connect>
            <connect srcID='rhoPriorMultiRhoWithDates.t:$(n)' targetID='prior' inputName='distribution' if='inposterior(BirthDeathSkyMultiRhoWithDates.t:$(n)) and rho.t:$(n)/estimate=true'>prior on sampling proportion t:$(n)</connect>
            <connect srcID='becomeUninfectiousRatePriorMultiRhoWithDates.t:$(n)' targetID='prior' inputName='distribution' if='inposterior(BirthDeathSkyMultiRhoWithDates.t:$(n)) and becomeUninfectiousRate.t:$(n)/estimate=true'>prior on becomeUninfectiousRate.t:$(n)</connect>
            <connect srcID='reproductiveNumberPriorMultiRhoWithDates.t:$(n)' targetID='prior' inputName='distribution' if='inposterior(BirthDeathSkyMultiRhoWithDates.t:$(n)) and reproductiveNumber.t:$(n)/estimate=true'>prior on reproductiveNumber.t:$(n)</connect>

            <connect srcID='BDSKY_contemptreeScaler.t:$(n)'                targetID='mcmc' inputName='operator' if='inposterior(BirthDeathSkylineMultiRhoWithDates.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true'>Scales all internal nodes for tree t:$(n)</connect>
            <connect srcID='BDSKY_contemptreeRootScaler.t:$(n)'            targetID='mcmc' inputName='operator' if='inposterior(BirthDeathSkyMultiRhoWithDates.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true'>Scales root node for tree t:$(n)</connect>
            <connect srcID='BDSKY_contempUniformOperator.t:$(n)'           targetID='mcmc' inputName='operator' if='inposterior(BirthDeathSkyMultiRhoWithDates.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true'>Draws new internal node heights uniformally for tree t:$(n)</connect>
            <connect srcID='BDSKY_contempSubtreeSlide.t:$(n)'              targetID='mcmc' inputName='operator' if='inposterior(BirthDeathSkyMultiRhoWithDates.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true'>Performs subtree slide rearrangement of tree t:$(n)</connect>
            <connect srcID='BDSKY_contempnarrow.t:$(n)'                    targetID='mcmc' inputName='operator' if='inposterior(BirthDeathSkyMultiRhoWithDates.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true'>Narrow exchange performs local rearrangement of tree t:$(n)</connect>
            <connect srcID='BDSKY_contempwide.t:$(n)'                      targetID='mcmc' inputName='operator' if='inposterior(BirthDeathSkyMultiRhoWithDates.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true'>Wide exchange performs global rearrangement of tree t:$(n)</connect>
            <connect srcID='BDSKY_contempWilsonBalding.t:$(n)'             targetID='mcmc' inputName='operator' if='inposterior(BirthDeathSkyMultiRhoWithDates.t:$(n)) and inposterior(Tree.t:$(n)) and Tree.t:$(n)/estimate=true'>Performs Wilson-Balding global rearrangement of tree t:$(n)</connect>

            <connect srcID='becomeUninfectiousRateScaler.t:$(n)' targetID='mcmc' inputName='operator'     if='inposterior(BirthDeathSkyMultiRhoWithDates.t:$(n)) and becomeUninfectiousRate.t:$(n)/estimate=true'/>
            <connect srcID='samplingScaler.t:$(n)' targetID='mcmc' inputName='operator'     if='inposterior(BirthDeathSkyMultiRhoWithDates.t:$(n)) and samplingProportion.t:$(n)/estimate=true'/>
            <connect srcID='rhoScaler.t:$(n)' targetID='mcmc' inputName='operator'     if='inposterior(BirthDeathSkyMultiRhoWithDates.t:$(n)) and rho.t:$(n)/estimate=true'/>
            <connect srcID='reproductiveNumberScaler.t:$(n)' targetID='mcmc' inputName='operator'     if='inposterior(BirthDeathSkyMultiRhoWithDates.t:$(n)) and reproductiveNumber.t:$(n)/estimate=true'/>
            <connect srcID='updownBD.t:$(n)' targetID='mcmc' inputName='operator'     if='inposterior(BirthDeathSkyMultiRhoWithDates.t:$(n)) and reproductiveNumber.t:$(n)/estimate=true and becomeUninfectiousRate.t:$(n)/estimate=true'/>



            <connect srcID='BirthDeathSkyMultiRhoWithDates.t:$(n)' targetID='tracelog' inputName='log' if='inposterior(BirthDeathSkyMultiRhoWithDates.t:$(n))'/>
            <plate var='p' range='samplingProportion,rho,becomeUninfectiousRate,reproductiveNumber'>
                    <connect srcID='$(p).t:$(n)' targetID='state' inputName='stateNode' if='inposterior(BirthDeathSkyMultiRhoWithDates.t:$(n)) and $(p).t:$(n)/estimate=true'/>
                    <connect srcID='$(p).t:$(n)' targetID='tracelog' inputName='log' if='inposterior(BirthDeathSkyMultiRhoWithDates.t:$(n)) and $(p).t:$(n)/estimate=true'/>
            </plate>
            <plate var='p' range='birth,death,sampling'>
	            <connect srcID='$(p).t:$(n)' targetID='tracelog' inputName='log' if='inposterior(BirthDeathSkyMultiRhoWithDates.t:$(n))'/>
			</plate>
	</subtemplate>
</mergewith>

</beast>



